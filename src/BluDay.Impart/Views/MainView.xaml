<UserControl
    x:Class="BluDay.Impart.Views.MainView"
    x:DefaultBindMode="OneWay"
    ui:BluViewContext.ViewModel="viewModels:MainViewModel"
    mc:Ignorable="d"
    d:DataContext="{d:DesignInstance Type=viewModels:MainViewModel}"
    d:RequestedTheme="Dark"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:BluDay.Common.UI.Xaml.Controls"
    xmlns:models="using:BluDay.Impart.Models"
    xmlns:ui="using:BluDay.Common.UI.Xaml"
    xmlns:viewModels="using:BluDay.Impart.ViewModels"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:interactions="using:Microsoft.Xaml.Interactions.Core"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity">
    <UserControl.Resources>
        <XamlUICommand x:Name="DeleteChatCommand" Command="{Binding DeleteChatCommand}" Label="Delete">
            <XamlUICommand.IconSource>
                <SymbolIconSource Symbol="Delete"/>
            </XamlUICommand.IconSource>
            
            <XamlUICommand.KeyboardAccelerators>
                <KeyboardAccelerator Key="Delete"/>
            </XamlUICommand.KeyboardAccelerators>
        </XamlUICommand>
    </UserControl.Resources>

    <Grid>
        <muxc:NavigationView
            x:Name="NavigationView"
            d:Style="{x:Null}"
            CompactPaneLength="48"
            Header="{Binding Header}"
            IsBackButtonVisible="Collapsed"
            IsPaneOpen="True"
            IsTabStop="True"
            OpenPaneLength="250"
            PaneDisplayMode="Left"
            SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <interactivity:Interaction.Behaviors>
                <interactions:EventTriggerBehavior EventName="Loaded">
                    <interactions:InvokeCommandAction
                        Command="{Binding EvaluateNavigationViewCommand}"
                        CommandParameter="{x:Bind NavigationView}"/>
                </interactions:EventTriggerBehavior>
            </interactivity:Interaction.Behaviors>

            <muxc:NavigationView.AutoSuggestBox>
                <AutoSuggestBox
                    Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    PlaceholderText="Search for chats"
                    QueryIcon="Find"/>
            </muxc:NavigationView.AutoSuggestBox>

            <muxc:NavigationView.MenuItems>
                <muxc:NavigationViewItemHeader Content="Chats" Visibility="{x:Bind NavigationView.IsPaneOpen}"/>

                <muxc:NavigationViewItem Tag="Main" Visibility="Collapsed"/>
                <muxc:NavigationViewItem Tag="Chat" Visibility="Collapsed"/>
            </muxc:NavigationView.MenuItems>

            <muxc:NavigationView.PaneCustomContent>
                <ListView
                    IsItemClickEnabled="True"
                    IsTapEnabled="True"
                    ItemsSource="{Binding Chats}"
                    SelectedItem="{Binding CurrentChat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    SelectionMode="Single">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="ListViewItem" BasedOn="{StaticResource DefaultListViewItemStyle}">
                            <Setter Property="Padding" Value="{ThemeResource NavigationViewItemButtonMargin}"/>
                            <Setter Property="MinHeight" Value="40"/>
                            <Setter Property="MinWidth" Value="48"/>
                            <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListViewItem">
                                        <ListViewItemPresenter
                                            SelectionCheckMarkVisualEnabled="False"
                                            Control.IsTemplateFocusTarget="True"
                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                            CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                                            CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                                            CheckMode="{ThemeResource ListViewItemCheckMode}"
                                            ContentMargin="{TemplateBinding Padding}"
                                            CornerRadius="{TemplateBinding CornerRadius}"
                                            DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                            DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                            DragBackground="{ThemeResource ListViewItemDragBackground}"
                                            DragForeground="{ThemeResource ListViewItemDragForeground}"
                                            FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                            FocusVisualPrimaryBrush="{TemplateBinding FocusVisualPrimaryBrush}"
                                            FocusVisualPrimaryThickness="{TemplateBinding FocusVisualPrimaryThickness}"
                                            FocusVisualSecondaryBrush="{TemplateBinding FocusVisualSecondaryBrush}"
                                            FocusVisualSecondaryThickness="{TemplateBinding FocusVisualSecondaryThickness}"
                                            FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                                            FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                            PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                                            PointerOverBackground="{ThemeResource ListViewItemBackgroundPointerOver}"
                                            PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                                            PressedBackground="{ThemeResource ListViewItemBackgroundPressed}"
                                            ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                            SelectedBackground="{ThemeResource ListViewItemBackgroundSelected}"
                                            SelectedForeground="{ThemeResource ListViewItemForegroundSelected}"
                                            SelectedPointerOverBackground="{ThemeResource ListViewItemBackgroundSelectedPointerOver}"
                                            SelectedPressedBackground="{ThemeResource ListViewItemBackgroundSelectedPressed}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>

                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="models:ChatModel">
                            <controls:BluChatListItem
                                MaxHeight="40"
                                Title="{x:Bind Title}"
                                Details="{x:Bind LatestMessage.Content}"
                                DateTime="{
                                    x:Bind LatestMessage.UpdatedAt,
                                    Converter={StaticResource DateTimeFormatConverter},
                                    ConverterParameter='Contextual'
                                }"
                                BadgeCount="{x:Bind UnreadCount}"
                                Picture="{x:Bind AvatarImage}"
                                IsGroup="{x:Bind IsGroup}">
                                <controls:BluChatListItem.ContextFlyout>
                                    <MenuFlyout>
                                        <MenuFlyoutItem
                                            Command="{StaticResource DeleteChatCommand}"
                                            CommandParameter="{x:Bind}"/>
                                    </MenuFlyout>
                                </controls:BluChatListItem.ContextFlyout>
                            </controls:BluChatListItem>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </muxc:NavigationView.PaneCustomContent>

            <muxc:NavigationView.FooterMenuItems>
                <muxc:NavigationViewItem Content="New chat" Icon="Add" SelectsOnInvoked="False">
                    <interactivity:Interaction.Behaviors>
                        <interactions:EventTriggerBehavior EventName="Tapped">
                            <interactions:InvokeCommandAction Command="{Binding CreateChatCommand}"/>
                        </interactions:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                </muxc:NavigationViewItem>

                <muxc:NavigationViewItem Tag="User">
                    <muxc:NavigationViewItem.Template>
                        <ControlTemplate>
                            <Grid
                                x:Name="NVIRootGrid"
                                Background="{TemplateBinding Background}"
                                Margin="{ThemeResource NavigationViewItemButtonMargin}"
                                Padding="{ThemeResource NavigationViewItemButtonMargin}"
                                CornerRadius="{ThemeResource ControlCornerRadius}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="PointerStates">
                                        <VisualState x:Name="Normal"/>
                                        
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter
                                                    Target="NVIRootGrid.Background"
                                                    Value="{ThemeResource NavigationViewItemBackgroundDisabled}"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter
                                                    Target="NVIRootGrid.Background"
                                                    Value="{ThemeResource NavigationViewItemBackgroundPointerOver}"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PointerOverSelected">
                                            <VisualState.Setters>
                                                <Setter
                                                    Target="NVIRootGrid.Background"
                                                    Value="{ThemeResource NavigationViewItemBackgroundSelectedPointerOver}"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter
                                                    Target="NVIRootGrid.Background"
                                                    Value="{ThemeResource NavigationViewItemBackgroundPressed}"/>

                                                <Setter Target="Presenter.Opacity" Value="0.8"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="PressedSelected">
                                            <VisualState.Setters>
                                                <Setter
                                                    Target="NVIRootGrid.Background"
                                                    Value="{ThemeResource NavigationViewItemBackgroundSelectedPressed}"/>

                                                <Setter Target="Presenter.Opacity" Value="0.8"/>
                                            </VisualState.Setters>
                                        </VisualState>

                                        <VisualState x:Name="Selected">
                                            <VisualState.Setters>
                                                <Setter
                                                    Target="NVIRootGrid.Background"
                                                    Value="{ThemeResource NavigationViewItemBackgroundSelected}"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <ContentPresenter x:Name="Presenter"/>
                            </Grid>
                        </ControlTemplate>
                    </muxc:NavigationViewItem.Template>

                    <StackPanel Orientation="Horizontal" Margin="-8,0">
                        <Grid Width="{x:Bind NavigationView.CompactPaneLength}">
                            <Grid Width="32">
                                <muxc:PersonPicture
                                    Style="{StaticResource BluPersonPictureStyle}"
                                    Height="32"
                                    Width="32"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    ProfilePicture="{Binding CurrentUser.AvatarImage}"
                                    d:ProfilePicture="https://avatarfiles.alphacoders.com/129/129501.jpg"/>

                                <Ellipse
                                    Fill="Lime"
                                    Height="12"
                                    Width="12"
                                    Stroke="#272727"
                                    StrokeThickness="2"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Bottom"/>
                            </Grid>
                        </Grid>

                        <TextBlock
                            Grid.Column="1"
                            VerticalAlignment="Center"
                            Text="{Binding CurrentUser.DisplayName, FallbackValue='User'}"
                            d:Text="Aiden Pearce"/>
                    </StackPanel>
                </muxc:NavigationViewItem>
            </muxc:NavigationView.FooterMenuItems>

            <ContentControl x:Name="CurrentViewContentControl"/>
        </muxc:NavigationView>
    </Grid>
</UserControl>